name: check and test
on:
  pull_request:
    branches: [ "main" ]
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build --file eddai_EliteDangerousApiInterface/Dockerfile -t eddaielitedangerousapiinterface:latest "eddai_EliteDangerousApiInterface" 
  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      db:
        image: postgis/postgis:16-3.4
        env:
          POSTGRES_DB: ed_info
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGIS_HOST: localhost
          POSTGIS_PORT: 5432
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build --file eddai_EliteDangerousApiInterface/Dockerfile -t eddaielitedangerousapiinterface:latest "eddai_EliteDangerousApiInterface" 
      - name: Run database flush
        run: docker run --rm --network host -e DJANGO_SECRET_KEY='5^_hu^y$-f!okdysc6wrp)x^s6vzd=!d68#vm7+*(mkhwt@b11' -e DJANGO_SETTINGS_MODULE=eddai_EliteDangerousApiInterface.settings.test -e POSTGIS_USER=test_user -e POSTGIS_PASSWORD=test_password -e POSTGIS_HOST=localhost -e POSTGIS_PORT=5432 eddaielitedangerousapiinterface:latest python manage.py flush --no-input
      - name: Run database migrations
        run: docker run --rm --network host -e DJANGO_SECRET_KEY='5^_hu^y$-f!okdysc6wrp)x^s6vzd=!d68#vm7+*(mkhwt@b11' -e DJANGO_SETTINGS_MODULE=eddai_EliteDangerousApiInterface.settings.test -e POSTGIS_USER=test_user -e POSTGIS_PASSWORD=test_password -e POSTGIS_HOST=localhost -e POSTGIS_PORT=5432 eddaielitedangerousapiinterface:latest python manage.py migrate
      - name: Run tests
        run: docker run --rm --network host -e DJANGO_SECRET_KEY='5^_hu^y$-f!okdysc6wrp)x^s6vzd=!d68#vm7+*(mkhwt@b11' -e DJANGO_SETTINGS_MODULE=eddai_EliteDangerousApiInterface.settings.test -e POSTGIS_USER=test_user -e POSTGIS_PASSWORD=test_password -e POSTGIS_HOST=localhost -e POSTGIS_PORT=5432 eddaielitedangerousapiinterface:latest python manage.py test
      - name: Set pull request status to failure
        if: failure()
        run: |
          gh api -X POST /repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -f state="failure" \
            -f context="CI Tests" \
            -f description="Tests failed"
      - name: Comment on pull request
        if: failure()
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "CI tests failed. Please check the logs and fix the issues."