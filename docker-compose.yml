x-common-config: &default-config
  pull_policy: always
  build: ./eddai_EliteDangerousApiInterface
  environment:
  - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
  - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
  - DJANGO_EMAIL_HOST=${DJANGO_EMAIL_HOST}
  - DJANGO_EMAIL_HOST_USER=${DJANGO_EMAIL_HOST_USER}
  - DJANGO_DEFAULT_FROM_EMAIL=${DJANGO_DEFAULT_FROM_EMAIL}
  - DJANGO_EMAIL_HOST_PASSWORD=${DJANGO_EMAIL_HOST_PASSWORD}
  - DJANGO_EMAIL_PORT=${DJANGO_EMAIL_PORT}
  - DJANGO_CACHES_HOST=${DJANGO_CACHES_HOST}
  - DJANGO_CACHES_PORT=${DJANGO_CACHES_PORT}
  - CELERY_BROKER_HOST=${CELERY_BROKER_HOST}
  - CELERY_BROKER_USER=${CELERY_BROKER_USER}
  - CELERY_BROKER_PASSWORD=${CELERY_BROKER_PASSWORD}
  - CELERY_BROKER_VHOST=${CELERY_BROKER_VHOST}
  - CELERY_RESULT_BACKEND_HOST=${CELERY_RESULT_BACKEND_HOST}
  - CELERY_RESULT_BACKEND_PORT=${CELERY_RESULT_BACKEND_PORT}
  - EDDN_USER_NAME_AGENT=${EDDN_USER_NAME_AGENT}
  - EDDN_USER_PASSWORD_AGENT=${EDDN_USER_PASSWORD_AGENT}
  - POSTGIS_HOST=${POSTGIS_HOST}
  - POSTGIS_PORT=${POSTGIS_PORT}
  - POSTGIS_USER=${POSTGIS_USER}
  - POSTGIS_PASSWORD=${POSTGIS_PASSWORD}
  - POSTGIS_DB=${POSTGIS_DB}
  - LOKI_HOST=${LOKI_HOST}
  - LOKI_PORT=${LOKI_PORT}
  restart: always
  networks:
    - eddai
    - loki

volumes:
  static_volume:
  media_volume:

networks:
  eddai:
  proxy:
    external: true
  loki:
    external: true

services:
  django:
    <<: *default-config
    container_name: django
    command: python -m daphne eddai_EliteDangerousApiInterface.asgi:application -p 8080 -b 0.0.0.0
    volumes:
      - static_volume:/app/static-server
      - media_volume:/app/media-server
    depends_on:
      - celery_worker_task
      - celery_worker_admin
  celery_worker_task:
    <<: *default-config
    deploy:
      replicas: 3
    command: celery -A eddai_EliteDangerousApiInterface worker -l info -P gevent --autoscale 100,5 -Q default -n WorkerTasck@%h
  celery_worker_admin:
    <<: *default-config
    deploy:
      replicas: 3
    command: celery -A eddai_EliteDangerousApiInterface worker -l info -P gevent --autoscale 100,5 -Q admin -n WorkerAdmin@%h
  celery_worker_ed_dbsync:
    <<: *default-config
    deploy:
      replicas: 3
    command: celery -A eddai_EliteDangerousApiInterface worker -l info -P gevent --autoscale 100,5 -Q ed_dbsync -n WorkerDBSync@%h
  celery_worker_all:
    <<: *default-config
    deploy:
      replicas: 3
    command: celery -A eddai_EliteDangerousApiInterface worker -l info -P gevent --autoscale 100,5 -Q admin,ed_dbsync,default -n WorkerAdmin@%h
  celery_beat:
    <<: *default-config
    container_name: celery_beat
    command: celery -A eddai_EliteDangerousApiInterface beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
  eddn:
    <<: *default-config
    container_name: eddn
    command: python eddn.py
    depends_on:
      - celery_worker_ed_dbsync
  nginx:
    build: ./nginx
    container_name: nginx
    depends_on:
      - django
    volumes:
      - static_volume:/app/static-server
      - media_volume:/app/media-server
    networks:
      - eddai
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      # Router per le richieste HTTP
      - "traefik.http.routers.nginx.rule=Host(`eddai.italiangamingsystem.it`)"
      - "traefik.http.routers.nginx.entrypoints=https"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=claudflare"
      - "traefik.http.routers.nginx.service=nginx"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"