# Generated by Django 5.0 on 2024-05-29 16:46

import django.db.models.deletion
import ed_bgs.models.Faction
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ed_system', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Faction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_eddn', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'faction',
                'verbose_name_plural': 'factions',
            },
        ),
        migrations.CreateModel(
            name='Government',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_eddn', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('type', models.CharField(blank=True, choices=[('A', 'Anarchy'), ('C', 'Autocrati'), ('P', 'Corporazioni'), ('S', 'Social')], max_length=1, null=True, verbose_name='type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'government',
                'verbose_name_plural': 'governments',
            },
        ),
        migrations.CreateModel(
            name='PowerState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_eddn', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'State of Power',
                'verbose_name_plural': 'States of Power',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='StateInMinorFaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('phase', models.CharField(choices=[('R', 'Recovering'), ('A', 'Active'), ('P', 'Pending')], max_length=1)),
            ],
            options={
                'verbose_name': 'State from the Minor Faction',
                'verbose_name_plural': 'States from the Minor Factions',
                'ordering': ('minorFaction', 'state'),
            },
        ),
        migrations.CreateModel(
            name='MinorFaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('allegiance', models.ForeignKey(default=ed_bgs.models.Faction.get_default, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_bgs.faction', verbose_name='allegiance')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('government', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_bgs.government', verbose_name='government')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Minor Faction',
                'verbose_name_plural': 'Minor Factions',
            },
        ),
        migrations.CreateModel(
            name='MinorFactionInSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('Influence', models.FloatField(blank=True, null=True, verbose_name='Influence')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('minorFaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_bgs.minorfaction', verbose_name='Minor Faction')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_system.system', verbose_name='system')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Minor Faction in System',
                'verbose_name_plural': 'Minor Factions in Systems',
                'ordering': ('system', 'minorFaction'),
            },
        ),
        migrations.CreateModel(
            name='Power',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('note', models.TextField(blank=True, null=True, verbose_name='note')),
                ('allegiance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_bgs.faction', verbose_name='allegiance')),
                ('headquarter', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_system.system', verbose_name='headquarter')),
            ],
            options={
                'verbose_name': 'Power',
                'verbose_name_plural': 'Powers',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PowerInSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('power', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_bgs.power', verbose_name='Power')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_system.system', verbose_name='system')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_bgs.powerstate', verbose_name='state')),
            ],
            options={
                'verbose_name': 'Power in System',
                'verbose_name_plural': 'Powers in Systems',
                'ordering': ('system',),
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_eddn', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('type', models.CharField(choices=[('H', 'Happiness'), ('E', 'Economy'), ('S', 'Security'), ('O', 'Other')], default='O', max_length=1, verbose_name='type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'ordering': ('name',),
                'indexes': [models.Index(fields=['name', 'type'], name='ed_bgs_stat_name_826303_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='state',
            constraint=models.UniqueConstraint(fields=('name', 'type'), name='unique_state_name_type'),
        ),
        migrations.AddField(
            model_name='stateinminorfaction',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='stateinminorfaction',
            name='minorFaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_bgs.minorfactioninsystem', verbose_name='Minor Faction'),
        ),
        migrations.AddField(
            model_name='stateinminorfaction',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_bgs.state', verbose_name='state'),
        ),
        migrations.AddField(
            model_name='stateinminorfaction',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddIndex(
            model_name='minorfaction',
            index=models.Index(fields=['allegiance'], name='idx_minor_faction_allegiance'),
        ),
        migrations.AddIndex(
            model_name='minorfaction',
            index=models.Index(fields=['government'], name='idx_minor_faction_government'),
        ),
        migrations.AddIndex(
            model_name='minorfactioninsystem',
            index=models.Index(fields=['system'], name='system_idx'),
        ),
        migrations.AddIndex(
            model_name='minorfactioninsystem',
            index=models.Index(fields=['minorFaction'], name='minorFaction_idx'),
        ),
        migrations.AddConstraint(
            model_name='minorfactioninsystem',
            constraint=models.UniqueConstraint(fields=('minorFaction', 'system'), name='unique_minosrs_faction_in_system'),
        ),
        migrations.AddIndex(
            model_name='powerinsystem',
            index=models.Index(fields=['state'], name='ed_bgs_powe_state_i_500645_idx'),
        ),
        migrations.AddIndex(
            model_name='powerinsystem',
            index=models.Index(fields=['power'], name='ed_bgs_powe_power_i_ce9042_idx'),
        ),
        migrations.AddIndex(
            model_name='stateinminorfaction',
            index=models.Index(fields=['minorFaction'], name='ed_bgs_stat_minorFa_649329_idx'),
        ),
        migrations.AddIndex(
            model_name='stateinminorfaction',
            index=models.Index(fields=['state'], name='ed_bgs_stat_state_i_5fd4cb_idx'),
        ),
        migrations.AddIndex(
            model_name='stateinminorfaction',
            index=models.Index(fields=['phase'], name='ed_bgs_stat_phase_97bb63_idx'),
        ),
    ]