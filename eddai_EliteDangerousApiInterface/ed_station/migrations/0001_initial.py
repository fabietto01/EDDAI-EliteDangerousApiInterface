# Generated by Django 5.0 on 2024-05-30 18:52

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ed_bgs', '0001_initial'),
        ('ed_economy', '0001_initial'),
        ('ed_system', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_eddn', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'service',
                'verbose_name_plural': 'services',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_eddn', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'station type',
                'verbose_name_plural': 'station types',
            },
        ),
        migrations.CreateModel(
            name='ServiceInStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_station.service', verbose_name='service')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'service in station',
                'verbose_name_plural': 'services in station',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('landingPad', models.CharField(choices=[(None, 'None'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large')], max_length=1, null=True, verbose_name='landing pad')),
                ('distance', models.FloatField(help_text='distance from the stary center', null=True, validators=[django.core.validators.MinValueValidator(0, 'the distance cannot be less than 0')], verbose_name='distance')),
                ('commodity', models.ManyToManyField(through='ed_economy.CommodityInStation', to='ed_economy.commodity', verbose_name='commodity')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('minorFaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_bgs.minorfaction', verbose_name='Minor Faction')),
                ('primaryEconomy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary_%(app_label)s_%(class)s_related', related_query_name='primary_%(app_label)s_%(class)ss', to='ed_economy.economy', verbose_name='primary economy')),
                ('secondaryEconomy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary_%(app_label)s_%(class)s_related', related_query_name='secondary_%(app_label)s_%(class)ss', to='ed_economy.economy', verbose_name='secondary economy')),
                ('service', models.ManyToManyField(through='ed_station.ServiceInStation', to='ed_station.service', verbose_name='service')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_system.system', verbose_name='system')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_station.stationtype', verbose_name='type')),
            ],
            options={
                'verbose_name': 'station',
                'verbose_name_plural': 'stations',
            },
        ),
        migrations.AddField(
            model_name='serviceinstation',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_station.station', verbose_name='station'),
        ),
        migrations.AddIndex(
            model_name='serviceinstation',
            index=models.Index(fields=['station'], name='station_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceinstation',
            index=models.Index(fields=['service'], name='service_idx'),
        ),
        migrations.AddConstraint(
            model_name='serviceinstation',
            constraint=models.UniqueConstraint(fields=('station', 'service'), name='unique_service_in_station'),
        ),
        migrations.AddIndex(
            model_name='station',
            index=models.Index(fields=['system'], name='ed_station__system__7a99c0_idx'),
        ),
        migrations.AddIndex(
            model_name='station',
            index=models.Index(fields=['type'], name='ed_station__type_id_d2ba99_idx'),
        ),
        migrations.AddIndex(
            model_name='station',
            index=models.Index(fields=['landingPad'], name='ed_station__landing_a8c723_idx'),
        ),
        migrations.AddIndex(
            model_name='station',
            index=models.Index(fields=['primaryEconomy'], name='ed_station__primary_8a6a89_idx'),
        ),
        migrations.AddIndex(
            model_name='station',
            index=models.Index(fields=['secondaryEconomy'], name='ed_station__seconda_8edfda_idx'),
        ),
        migrations.AddConstraint(
            model_name='station',
            constraint=models.UniqueConstraint(fields=('name', 'system'), name='unique_station_in_system'),
        ),
    ]