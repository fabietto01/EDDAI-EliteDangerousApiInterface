# Generated by Django 4.1 on 2022-10-16 20:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('ed_material', '0001_initial'),
        ('ed_body', '0014_planet_planet_ed_body_pla_atmosph_0b73ab_idx_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='planet',
            name='atmosphereType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.atmospheretype', verbose_name='atmosphere type'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='landable',
            field=models.BooleanField(null=True, verbose_name='landable'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='massEM',
            field=models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0, 'the mass cannot be less than 0')], verbose_name='Earth masses'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='planetType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.planettype', verbose_name='planet type'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='reserveLevel',
            field=models.CharField(choices=[('Pristine', 'Pristine'), ('Major', 'Major'), ('Common', 'Common'), ('Low', 'Low'), ('Depleted', 'Depleted')], max_length=10, null=True, verbose_name='reserve level'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='surfaceGravity',
            field=models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0, 'the surface gravity cannot be less than 0')], verbose_name='surface gravity'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='surfacePressure',
            field=models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0, 'the surface pressure cannot be less than 0')], verbose_name='surface pressure'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='tidalLock',
            field=models.BooleanField(help_text='Tidal locking results in the moon rotating about its axis in about the same time it takes to orbit Body.', null=True, verbose_name='tidal lock'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='volcanism',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.volcanism', verbose_name='volcanism'),
        ),
        migrations.CreateModel(
            name='MaterialInPlanet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.FloatField(validators=[django.core.validators.MinValueValidator(0, 'the percent cannot be less than 0'), django.core.validators.MaxValueValidator(100, 'the percent cannot be greater than 100')], verbose_name='percent')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_material.material', verbose_name='material')),
                ('planet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.planet', verbose_name='planet')),
            ],
            options={
                'verbose_name': 'material in planet',
                'verbose_name_plural': 'materials in planets',
            },
        ),
        migrations.CreateModel(
            name='AtmosphereComponentInPlanet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.FloatField(validators=[django.core.validators.MinValueValidator(0, 'the percent cannot be less than 0'), django.core.validators.MaxValueValidator(100, 'the percent cannot be greater than 100')], verbose_name='percent')),
                ('atmosphere_component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.atmospherecomponent', verbose_name='atmosphere component')),
                ('planet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.planet', verbose_name='planet')),
            ],
            options={
                'verbose_name': 'atmosphere component in planet',
                'verbose_name_plural': 'atmosphere components in planets',
            },
        ),
        migrations.AddIndex(
            model_name='materialinplanet',
            index=models.Index(fields=['planet', 'material'], name='planet_material_idx'),
        ),
        migrations.AddIndex(
            model_name='atmospherecomponentinplanet',
            index=models.Index(fields=['planet', 'atmosphere_component'], name='planet_atmo_component_idx'),
        ),
    ]
