# Generated by Django 4.1 on 2022-10-08 11:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('ed_body', '0013_volcanism'),
    ]

    operations = [
        migrations.CreateModel(
            name='Planet',
            fields=[
                ('basebody_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ed_body.basebody')),
                ('terraformState', models.CharField(blank=True, choices=[('Terraformable', 'Terraformable'), ('Terraforming', 'Terraforming'), ('Terraformed', 'Terraformed')], max_length=15, null=True, verbose_name='terraform state')),
                ('_compositionIce', models.FloatField(validators=[django.core.validators.MinValueValidator(0, 'the composition ice cannot be less than 0')], verbose_name='ice')),
                ('_compositionRock', models.FloatField(validators=[django.core.validators.MinValueValidator(0, 'the composition rock cannot be less than 0')], verbose_name='rock')),
                ('_compositionMetal', models.FloatField(validators=[django.core.validators.MinValueValidator(0, 'the composition metal cannot be less than 0')], verbose_name='metal')),
                ('landable', models.BooleanField(verbose_name='landable')),
                ('massEM', models.FloatField(validators=[django.core.validators.MinValueValidator(0, 'the mass cannot be less than 0')], verbose_name='Earth masses')),
                ('surfaceGravity', models.FloatField(validators=[django.core.validators.MinValueValidator(0, 'the surface gravity cannot be less than 0')], verbose_name='surface gravity')),
                ('surfacePressure', models.FloatField(validators=[django.core.validators.MinValueValidator(0, 'the surface pressure cannot be less than 0')], verbose_name='surface pressure')),
                ('tidalLock', models.BooleanField(help_text='Tidal locking results in the moon rotating about its axis in about the same time it takes to orbit Body.', verbose_name='tidal lock')),
                ('reserveLevel', models.CharField(choices=[('Pristine', 'Pristine'), ('Major', 'Major'), ('Common', 'Common'), ('Low', 'Low'), ('Depleted', 'Depleted')], max_length=10, verbose_name='reserve level')),
                ('atmosphereType', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.atmospheretype', verbose_name='atmosphere type')),
                ('planetType', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.planettype', verbose_name='planet type')),
                ('volcanism', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.volcanism', verbose_name='volcanism')),
            ],
            options={
                'verbose_name': 'planet',
                'verbose_name_plural': 'planets',
            },
            bases=('ed_body.basebody',),
        ),
        migrations.AddIndex(
            model_name='planet',
            index=models.Index(fields=['atmosphereType'], name='ed_body_pla_atmosph_0b73ab_idx'),
        ),
        migrations.AddIndex(
            model_name='planet',
            index=models.Index(fields=['planetType'], name='ed_body_pla_planetT_d94fa0_idx'),
        ),
        migrations.AddIndex(
            model_name='planet',
            index=models.Index(fields=['volcanism'], name='ed_body_pla_volcani_a2039a_idx'),
        ),
        migrations.AddIndex(
            model_name='planet',
            index=models.Index(fields=['terraformState'], name='ed_body_pla_terrafo_34bc81_idx'),
        ),
        migrations.AddIndex(
            model_name='planet',
            index=models.Index(fields=['landable'], name='ed_body_pla_landabl_11e03a_idx'),
        ),
        migrations.AddIndex(
            model_name='planet',
            index=models.Index(fields=['tidalLock'], name='ed_body_pla_tidalLo_3b8402_idx'),
        ),
        migrations.AddIndex(
            model_name='planet',
            index=models.Index(fields=['reserveLevel'], name='ed_body_pla_reserve_cb036b_idx'),
        ),
    ]
