# Generated by Django 5.1.1 on 2025-02-14 12:36

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ed_body', '0004_alter_atmospherecomponent_options_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='atmospherecomponent',
            options={'ordering': ['pk'], 'verbose_name': 'atmosphere component', 'verbose_name_plural': 'atmosphere components'},
        ),
        migrations.AlterModelOptions(
            name='atmospheretype',
            options={'ordering': ['pk'], 'verbose_name': 'atmosphere type', 'verbose_name_plural': 'atmosphere types'},
        ),
        migrations.AlterModelOptions(
            name='planettype',
            options={'ordering': ['pk'], 'verbose_name': 'planet type', 'verbose_name_plural': 'planet types'},
        ),
        migrations.AlterModelOptions(
            name='starluminosity',
            options={'ordering': ['pk'], 'verbose_name': 'star luminosity', 'verbose_name_plural': 'star luminosities'},
        ),
        migrations.AlterModelOptions(
            name='startype',
            options={'ordering': ['pk'], 'verbose_name': 'star type', 'verbose_name_plural': 'star types'},
        ),
        migrations.AlterModelOptions(
            name='volcanism',
            options={'ordering': ['pk'], 'verbose_name': 'volcanism', 'verbose_name_plural': 'volcanisms'},
        ),
        migrations.AlterField(
            model_name='planet',
            name='_compositionIce',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'the composition ice cannot be less than 0')], verbose_name='ice'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='_compositionMetal',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'the composition metal cannot be less than 0')], verbose_name='metal'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='_compositionRock',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'the composition rock cannot be less than 0')], verbose_name='rock'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='atmosphereType',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.atmospheretype', verbose_name='atmosphere type'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='landable',
            field=models.BooleanField(blank=True, null=True, verbose_name='landable'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='massEM',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'the mass cannot be less than 0')], verbose_name='Earth masses'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='planetType',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.planettype', verbose_name='planet type'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='reserveLevel',
            field=models.CharField(blank=True, choices=[('Pristine', 'Pristine'), ('Major', 'Major'), ('Common', 'Common'), ('Low', 'Low'), ('Depleted', 'Depleted')], max_length=10, null=True, verbose_name='reserve level'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='surfaceGravity',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'the surface gravity cannot be less than 0')], verbose_name='surface gravity'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='surfacePressure',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'the surface pressure cannot be less than 0')], verbose_name='surface pressure'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='tidalLock',
            field=models.BooleanField(blank=True, help_text='Tidal locking results in the moon rotating about its axis in about the same time it takes to orbit Body.', null=True, verbose_name='tidal lock'),
        ),
        migrations.AlterField(
            model_name='planet',
            name='volcanism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.volcanism', verbose_name='volcanism'),
        ),
        migrations.AlterField(
            model_name='star',
            name='absoluteMagnitude',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'the absolute magnitude cannot be less than 0')], verbose_name='absolute magnitude'),
        ),
        migrations.AlterField(
            model_name='star',
            name='age',
            field=models.FloatField(blank=True, help_text='age in millions of years', null=True, validators=[django.core.validators.MinValueValidator(0, 'the age cannot be less than 0')], verbose_name='age'),
        ),
        migrations.AlterField(
            model_name='star',
            name='luminosity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.starluminosity', verbose_name='luminosity'),
        ),
        migrations.AlterField(
            model_name='star',
            name='starType',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.startype', verbose_name='star type'),
        ),
        migrations.AlterField(
            model_name='star',
            name='stellarMass',
            field=models.FloatField(blank=True, help_text="mass as multiple of Sol's mass", null=True, validators=[django.core.validators.MinValueValidator(0, 'the stellar mass cannot be less than 0')], verbose_name='stellar mass'),
        ),
        migrations.AlterField(
            model_name='star',
            name='subclass',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'the subclass cannot be less than 0'), django.core.validators.MaxValueValidator(9, 'the subclass cannot be greater than 9')], verbose_name='subclass'),
        ),
    ]
