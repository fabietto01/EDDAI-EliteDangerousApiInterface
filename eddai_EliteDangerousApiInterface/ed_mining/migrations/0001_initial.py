# Generated by Django 5.0 on 2024-05-29 15:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ed_body', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HotspotType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_eddn', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Hotspot Type',
                'verbose_name_plural': 'Hotspot Type',
            },
        ),
        migrations.CreateModel(
            name='Ring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('innerRad', models.FloatField(blank=True, help_text='inner radius of the ring', null=True, validators=[django.core.validators.MinValueValidator(0, 'the inner radius cannot be less than 0')], verbose_name='inner radius')),
                ('outerRad', models.FloatField(blank=True, help_text='outer radius of the ring', null=True, validators=[django.core.validators.MinValueValidator(0, 'the outer radius cannot be less than 0')], verbose_name='outer radius')),
                ('massMT', models.FloatField(blank=True, help_text='mass of the ring', null=True, validators=[django.core.validators.MinValueValidator(0, 'the mass cannot be less than 0')], verbose_name='mass')),
                ('ringType', models.CharField(choices=[('MetalRich', 'Metal Rich'), ('Metalic', 'Metalic'), ('Rocky', 'Rocky'), ('Icy', 'Icy')], help_text='type of the ring', max_length=255, null=True, verbose_name='ring type')),
                ('body', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_body.basebody', verbose_name='body')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'ring',
                'verbose_name_plural': 'rings',
            },
        ),
        migrations.CreateModel(
            name='HotSpot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('count', models.IntegerField(help_text='number of HotSpot', validators=[django.core.validators.MinValueValidator(0, 'the count cannot be less than 0')], verbose_name='count')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_mining.hotspottype', verbose_name='type')),
                ('ring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='ed_mining.ring', verbose_name='ring')),
            ],
            options={
                'verbose_name': 'HotSpot',
                'verbose_name_plural': 'HotSpots',
            },
        ),
        migrations.AddIndex(
            model_name='ring',
            index=models.Index(fields=['body'], name='ed_mining_r_body_id_ef1485_idx'),
        ),
        migrations.AddIndex(
            model_name='ring',
            index=models.Index(fields=['ringType'], name='ed_mining_r_ringTyp_9f4d2f_idx'),
        ),
        migrations.AddConstraint(
            model_name='ring',
            constraint=models.UniqueConstraint(fields=('name', 'body'), name='unique_ring_name_body'),
        ),
        migrations.AddConstraint(
            model_name='ring',
            constraint=models.CheckConstraint(check=models.Q(('innerRad__lt', models.F('outerRad')), ('innerRad__isnull', True), ('outerRad__isnull', True), _connector='OR'), name='inner_radius_lt_outer_radius'),
        ),
        migrations.AddIndex(
            model_name='hotspot',
            index=models.Index(fields=['type', 'ring'], name='ed_mining_h_type_id_4e53dd_idx'),
        ),
        migrations.AddConstraint(
            model_name='hotspot',
            constraint=models.UniqueConstraint(fields=('type', 'ring'), name='unique_type_ring'),
        ),
    ]
